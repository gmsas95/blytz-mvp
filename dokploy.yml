# Complete Dokploy Traefik Configuration for Blytz Live Auction
# Copy to: /etc/dokploy/traefik/dynamic/dokploy.yml

http:
  routers:
    # Main Frontend HTTP (redirects to HTTPS)
    frontend-router-http:
      rule: Host(`blytz.app`) || Host(`www.blytz.app`)
      service: frontend-service
      entryPoints:
        - web
      middlewares:
        - redirect-to-https

    # Main Frontend HTTPS
    frontend-router-secure:
      rule: Host(`blytz.app`) || Host(`www.blytz.app`)
      service: frontend-service
      entryPoints:
        - websecure
      tls:
        certResolver: letsencrypt

    # Demo Interface - Viewer Platform with LiveKit Client
    demo-router-http:
      rule: Host(`demo.blytz.app`)
      service: demo-service
      entryPoints:
        - web
      middlewares:
        - redirect-to-https

    demo-router-secure:
      rule: Host(`demo.blytz.app`)
      service: demo-service
      entryPoints:
        - websecure
      tls:
        certResolver: letsencrypt

    # Seller Interface - Broadcaster Platform with LiveKit SDK
    seller-router-http:
      rule: Host(`seller.blytz.app`)
      service: seller-service
      entryPoints:
        - web
      middlewares:
        - redirect-to-https

    seller-router-secure:
      rule: Host(`seller.blytz.app`)
      service: seller-service
      entryPoints:
        - websecure
      tls:
        certResolver: letsencrypt

    # Dokploy Management
    dokploy-router-app:
      rule: Host(`dokploy.docker.localhost`) && PathPrefix(`/`) || Host(`sudo.blytz.app`)
      service: dokploy-service-app
      entryPoints:
        - web
      middlewares:
        - redirect-to-https
    dokploy-router-app-secure:
      rule: Host(`sudo.blytz.app`)
      service: dokploy-service-app
      entryPoints:
        - websecure
      tls:
        certResolver: letsencrypt

    # API Gateway Router (for api.blytz.app)
    api-gateway-router-http:
      rule: Host(`api.blytz.app`)
      service: gateway-service
      entryPoints:
        - web
      middlewares:
        - redirect-to-https

    api-gateway-router-secure:
      rule: Host(`api.blytz.app`)
      service: gateway-service
      entryPoints:
        - websecure
      tls:
        certResolver: letsencrypt

    # LiveKit Server Router (for livekit.blytz.app)
    livekit-router-http:
      rule: Host(`livekit.blytz.app`)
      service: livekit-service
      entryPoints:
        - web
      middlewares:
        - redirect-to-https

    livekit-router-secure:
      rule: Host(`livekit.blytz.app`)
      service: livekit-service
      entryPoints:
        - websecure
      tls:
        certResolver: letsencrypt
      middlewares:
        - cors-headers

  services:
    # Main Frontend Service
    frontend-service:
      loadBalancer:
        servers:
          - url: http://blytz-frontend-prod:3000
        passHostHeader: true

    # API Gateway Service
    gateway-service:
      loadBalancer:
        servers:
          - url: http://blytz-gateway-prod:8080
        passHostHeader: true

    # LiveKit Server Service
    livekit-service:
      loadBalancer:
        servers:
          - url: http://blytz-livekit-prod:7880
        passHostHeader: true

    # Demo Frontend Service - Viewer Platform
    demo-service:
      loadBalancer:
        servers:
          - url: http://blytz-demo-prod:3001
        passHostHeader: true

    # Seller Frontend Service - Broadcaster Platform
    seller-service:
      loadBalancer:
        servers:
          - url: http://blytz-seller-prod:3002
        passHostHeader: true

    dokploy-service-app:
      loadBalancer:
        servers:
          - url: http://dokploy:3000
        passHostHeader: true

  middlewares:
    redirect-to-https:
      redirectScheme:
        scheme: https
        permanent: true

    # CORS middleware for LiveKit Cloud
    cors-headers:
      headers:
        customResponseHeaders:
          Access-Control-Allow-Origin: "*"
          Access-Control-Allow-Methods: "GET, POST, PUT, DELETE, OPTIONS"
          Access-Control-Allow-Headers: "DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization,LiveKit-Token"
          Access-Control-Allow-Credentials: "true"
          Access-Control-Max-Age: "86400"

    # Security headers
    security-headers:
      headers:
        customResponseHeaders:
          X-Frame-Options: "SAMEORIGIN"
          X-Content-Type-Options: "nosniff"
          X-XSS-Protection: "1; mode=block"
          Strict-Transport-Security: "max-age=31536000; includeSubDomains"

certificatesResolvers:
  letsencrypt:
    acme:
      email: blytzgroup25@gmail.com
      storage: /etc/dokploy/traefik/dynamic/acme.json
      httpChallenge:
        entryPoint: web

# Entry Points
entryPoints:
  web:
    address: ":80"
  websecure:
    address: ":443"
    http3:
      advertisedPort: 443
    http:
      tls:
        certResolver: letsencrypt

# Providers
providers:
  docker:
    exposedByDefault: false
    watch: true
    network: dokploy-network
  file:
    directory: /etc/dokploy/traefik/dynamic
    watch: true

global:
  sendAnonymousUsage: false