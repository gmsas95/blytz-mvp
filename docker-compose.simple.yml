version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: blytz-postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: blytz_main
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - blytz-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: blytz-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - blytz-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Auth Service
  auth-service:
    build:
      context: ./services/auth-service
      dockerfile: Dockerfile
    container_name: blytz-auth-service
    environment:
      - PORT=8084
      - ENVIRONMENT=development
      - LOG_LEVEL=info
      - DATABASE_URL=postgres://postgres:password@postgres:5432/auth_db?sslmode=disable
      - JWT_SECRET=your-super-secret-jwt-key-change-this-in-production
      - BETTER_AUTH_SECRET=better-auth-secret-key-change-this-in-production
    ports:
      - "8084:8084"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - blytz-network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8084/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Auction Service
  auction-service:
    build:
      context: ./services/auction-service
      dockerfile: Dockerfile
    container_name: blytz-auction-service
    environment:
      - PORT=8083
      - ENVIRONMENT=development
      - LOG_LEVEL=info
      - DATABASE_URL=postgres://postgres:password@postgres:5432/auction_db?sslmode=disable
      - REDIS_URL=redis:6379
    ports:
      - "8083:8083"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - blytz-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8083/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Nginx - Serves frontend and routes API calls
  nginx:
    image: nginx:alpine
    container_name: blytz-nginx
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./frontend:/usr/share/nginx/html:ro
    depends_on:
      - auth-service
      - auction-service
    networks:
      - blytz-network
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  postgres_data:
  redis_data:

networks:
  blytz-network:
    driver: bridge