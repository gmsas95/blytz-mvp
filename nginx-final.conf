events {
    worker_connections 1024;
}

http {
    # Simple configuration using localhost for services that expose ports

    # Main frontend and API routing
    server {
        listen 80;
        server_name blytz.app www.blytz.app;

        # Security headers
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header X-XSS-Protection "1; mode=block" always;

        # Frontend - proxy to the frontend container
        location / {
            proxy_pass http://blytz-frontend-prod:3000;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }
    }

    # Auth Service (port 8084 is exposed to host)
    server {
        listen 80;
        server_name auth.blytz.app;

        location / {
            # Use localhost since port 8084 is exposed to host
            proxy_pass http://localhost:8084;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            # CORS headers
            add_header 'Access-Control-Allow-Origin' '*' always;
            add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
            add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization' always;

            # Handle preflight requests
            if ($request_method = 'OPTIONS') {
                add_header 'Access-Control-Allow-Origin' '*';
                add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS';
                add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization';
                add_header 'Access-Control-Max-Age' 1728000;
                add_header 'Content-Type' 'text/plain; charset=utf-8';
                add_header 'Content-Length' 0;
                return 204;
            }
        }
    }

    # Status Page
    server {
        listen 80;
        server_name status.blytz.app;

        location / {
            return 200 '{
                "status": "operational",
                "services": {
                    "frontend": "https://blytz.app",
                    "auth": "https://auth.blytz.app",
                    "timestamp": "2025-10-21T01:28:00Z"
                }
            }';
            add_header Content-Type application/json;
        }
    }
}