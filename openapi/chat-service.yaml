openapi: 3.1.0
info:
  title: Blytz Chat Service
  version: 1.0.0
  description: Real-time chat service with WebSocket support for auction rooms.
servers:
  - url: http://localhost:8088
paths:
  /health:
    get:
      summary: Health check endpoint
      tags:
        - Health
      responses:
        '200':
          description: Service is healthy
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "ok"
                  service:
                    type: string
                    example: "chat"

  /chat-metrics:
    get:
      summary: Prometheus metrics endpoint
      tags:
        - Monitoring
      responses:
        '200':
          description: Prometheus metrics
          content:
            text/plain:
              schema:
                type: string

  /api/v1/chat/ws:
    get:
      summary: WebSocket connection for real-time chat
      tags:
        - Chat
      security:
        - bearerAuth: []
      parameters:
        - name: roomId
          in: query
          required: true
          schema:
            type: string
          description: Room ID to join
      responses:
        '101':
          description: WebSocket connection upgraded
        '400':
          description: Bad request - Room ID required
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /api/v1/chat/rooms/{roomId}/messages:
    get:
      summary: Get messages from a specific room
      tags:
        - Chat
      security:
        - bearerAuth: []
      parameters:
        - name: roomId
          in: path
          required: true
          schema:
            type: string
          description: Room ID
        - name: limit
          in: query
          schema:
            type: integer
            default: 50
            minimum: 1
            maximum: 100
          description: Maximum number of messages to retrieve
      responses:
        '200':
          description: Messages retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetMessagesResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '400':
          description: Bad request - Room ID required
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

    post:
      summary: Send a message to a specific room
      tags:
        - Chat
      security:
        - bearerAuth: []
      parameters:
        - name: roomId
          in: path
          required: true
          schema:
            type: string
          description: Room ID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SendMessageRequest'
      responses:
        '200':
          description: Message sent successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '400':
          description: Bad request - Invalid message content
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /api/v1/chat/rooms:
    get:
      summary: Get all rooms for the authenticated user
      tags:
        - Chat
      security:
        - bearerAuth: []
      responses:
        '200':
          description: User rooms retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetRoomsResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

components:
  schemas:
    Message:
      type: object
      properties:
        id:
          type: string
        room_id:
          type: string
        user_id:
          type: string
        content:
          type: string
        timestamp:
          type: string
          format: date-time

    ChatRoom:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        type:
          type: string
        created_at:
          type: string
          format: date-time

    SendMessageRequest:
      type: object
      required: [content]
      properties:
        content:
          type: string
          description: Message content to send

    MessageResponse:
      type: object
      properties:
        id:
          type: string
        room_id:
          type: string
        user_id:
          type: string
        content:
          type: string
        timestamp:
          type: string
          format: date-time

    ChatRoomResponse:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        type:
          type: string
        created_at:
          type: string
          format: date-time

    GetMessagesResponse:
      type: object
      properties:
        messages:
          type: array
          items:
            $ref: '#/components/schemas/MessageResponse'

    GetRoomsResponse:
      type: object
      properties:
        rooms:
          type: array
          items:
            $ref: '#/components/schemas/ChatRoomResponse'

    ErrorResponse:
      type: object
      properties:
        success:
          type: boolean
          example: false
        error:
          type: string
          example: "VALIDATION_ERROR"
        message:
          type: string
          example: "Room ID is required"

  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
