openapi: 3.1.0
info:
  title: Blytz Logistics Service
  version: 1.0.0
  description: Comprehensive shipment and logistics management service for order fulfillment.
servers:
  - url: http://localhost:8087
paths:
  /health:
    get:
      summary: Health check endpoint
      tags:
        - Health
      responses:
        '200':
          description: Service is healthy
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "ok"
                  service:
                    type: string
                    example: "logistics"

  /logistics-metrics:
    get:
      summary: Prometheus metrics endpoint
      tags:
        - Monitoring
      responses:
        '200':
          description: Prometheus metrics
          content:
            text/plain:
              schema:
                type: string

  /api/v1/logistics/shipments:
    post:
      summary: Create a new shipment
      tags:
        - Shipments
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateShipmentRequest'
      responses:
        '200':
          description: Shipment created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShipmentResponse'
        '400':
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /api/v1/logistics/shipments/{id}:
    get:
      summary: Get a specific shipment by ID
      tags:
        - Shipments
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: Shipment ID
      responses:
        '200':
          description: Shipment details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShipmentResponse'
        '404':
          description: Shipment not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /api/v1/logistics/shipments/{id}/status:
    put:
      summary: Update shipment status
      tags:
        - Shipments
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: Shipment ID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateShipmentStatusRequest'
      responses:
        '200':
          description: Shipment status updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShipmentResponse'
        '400':
          description: Invalid status or request data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Shipment not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /api/v1/logistics/shipments/order/{orderId}:
    get:
      summary: Get shipment by order ID
      tags:
        - Shipments
      security:
        - bearerAuth: []
      parameters:
        - name: orderId
          in: path
          required: true
          schema:
            type: string
          description: Order ID
      responses:
        '200':
          description: Shipment details for order
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShipmentResponse'
        '404':
          description: Shipment not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /api/v1/logistics/tracking/{trackingNumber}:
    get:
      summary: Track shipment by tracking number (public endpoint)
      tags:
        - Tracking
      parameters:
        - name: trackingNumber
          in: path
          required: true
          schema:
            type: string
          description: Tracking number
      responses:
        '200':
          description: Shipment tracking information
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrackingResponse'
        '404':
          description: Shipment not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

components:
  schemas:
    CreateShipmentRequest:
      type: object
      required: [order_id, carrier, service, origin_address, destination_address, weight, dimensions, cost]
      properties:
        order_id:
          type: string
          description: Order ID
        carrier:
          type: string
          description: Shipping carrier (e.g., ninja_van, fedex, dhl)
        service:
          type: string
          description: Shipping service level
        origin_address:
          $ref: '#/components/schemas/AddressRequest'
        destination_address:
          $ref: '#/components/schemas/AddressRequest'
        weight:
          type: number
          minimum: 0
          description: Package weight in kg
        dimensions:
          $ref: '#/components/schemas/DimensionsRequest'
        cost:
          type: number
          minimum: 0
          description: Shipping cost
        notes:
          type: string
          description: Shipment notes

    AddressRequest:
      type: object
      required: [name, street, city, state, postal_code, country]
      properties:
        name:
          type: string
          description: Full name
        street:
          type: string
          description: Street address
        city:
          type: string
          description: City
        state:
          type: string
          description: State/Province
        postal_code:
          type: string
          description: Postal/ZIP code
        country:
          type: string
          length: 2
          description: Country code (2 letters)
        phone_number:
          type: string
          description: Phone number

    DimensionsRequest:
      type: object
      required: [length, width, height]
      properties:
        length:
          type: number
          minimum: 0
          description: Length in cm
        width:
          type: number
          minimum: 0
          description: Width in cm
        height:
          type: number
          minimum: 0
          description: Height in cm

    UpdateShipmentStatusRequest:
      type: object
      required: [status]
      properties:
        status:
          type: string
          enum: [pending, label_created, picked_up, in_transit, out_for_delivery, delivered, failed, returned]
          description: New shipment status

    ShipmentResponse:
      type: object
      properties:
        id:
          type: string
          description: Shipment ID
        order_id:
          type: string
          description: Order ID
        user_id:
          type: string
          description: User ID
        tracking_number:
          type: string
          description: Tracking number
        carrier:
          type: string
          description: Shipping carrier
        service:
          type: string
          description: Shipping service
        status:
          type: string
          enum: [pending, label_created, picked_up, in_transit, out_for_delivery, delivered, failed, returned]
          description: Shipment status
        origin_address:
          $ref: '#/components/schemas/AddressResponse'
        destination_address:
          $ref: '#/components/schemas/AddressResponse'
        weight:
          type: number
          description: Package weight in kg
        dimensions:
          $ref: '#/components/schemas/DimensionsResponse'
        estimated_delivery:
          type: string
          format: date-time
          description: Estimated delivery date
        actual_delivery:
          type: string
          format: date-time
          description: Actual delivery date
        cost:
          type: number
          description: Shipping cost
        notes:
          type: string
          description: Shipment notes
        created_at:
          type: string
          format: date-time
          description: Shipment creation time
        updated_at:
          type: string
          format: date-time
          description: Last update time

    AddressResponse:
      type: object
      properties:
        name:
          type: string
        street:
          type: string
        city:
          type: string
        state:
          type: string
        postal_code:
          type: string
        country:
          type: string
        phone_number:
          type: string

    DimensionsResponse:
      type: object
      properties:
        length:
          type: number
        width:
          type: number
        height:
          type: number

    TrackingResponse:
      type: object
      properties:
        shipment:
          $ref: '#/components/schemas/ShipmentResponse'
        events:
          type: array
          items:
            $ref: '#/components/schemas/TrackingEventResponse'

    TrackingEventResponse:
      type: object
      properties:
        id:
          type: string
          description: Event ID
        status:
          type: string
          description: Event status
        description:
          type: string
          description: Event description
        location:
          type: string
          description: Event location
        timestamp:
          type: string
          format: date-time
          description: Event timestamp

    ErrorResponse:
      type: object
      properties:
        success:
          type: boolean
          example: false
        error:
          type: string
          example: "INVALID_REQUEST"
        message:
          type: string
          example: "The request data was invalid."

  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
