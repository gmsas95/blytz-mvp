openapi: 3.1.0
info:
  title: Blytz Order Service
  version: 1.0.0
  description: Order management service for handling auction purchases and order lifecycle.
servers:
  - url: http://localhost:8085
paths:
  /health:
    get:
      summary: Health check endpoint
      tags:
        - Health
      responses:
        '200':
          description: Service is healthy
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "ok"
                  service:
                    type: string
                    example: "order"

  /order-metrics:
    get:
      summary: Prometheus metrics endpoint
      tags:
        - Monitoring
      responses:
        '200':
          description: Prometheus metrics
          content:
            text/plain:
              schema:
                type: string

  /api/v1/orders/:
    post:
      summary: Create a new order
      tags:
        - Orders
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateOrderRequest'
      responses:
        '200':
          description: Order created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderResponse'
        '400':
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /api/v1/orders/{id}:
    get:
      summary: Get a specific order by ID
      tags:
        - Orders
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: Order ID
      responses:
        '200':
          description: Order details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderResponse'
        '404':
          description: Order not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

    delete:
      summary: Cancel an order
      tags:
        - Orders
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: Order ID
      responses:
        '200':
          description: Order cancelled successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "Order cancelled successfully"
        '404':
          description: Order not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /api/v1/orders/user/{userId}:
    get:
      summary: Get all orders for a user
      tags:
        - Orders
      security:
        - bearerAuth: []
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
          description: User ID
        - name: page
          in: query
          schema:
            type: integer
            default: 1
            minimum: 1
          description: Page number for pagination
        - name: page_size
          in: query
          schema:
            type: integer
            default: 20
            minimum: 1
            maximum: 100
          description: Number of orders per page
      responses:
        '200':
          description: User orders retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrdersListResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /api/v1/orders/{id}/status:
    put:
      summary: Update order status
      tags:
        - Orders
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: Order ID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateOrderStatusRequest'
      responses:
        '200':
          description: Order status updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderResponse'
        '400':
          description: Invalid status or request data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Order not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

components:
  schemas:
    CreateOrderRequest:
      type: object
      required: [product_id, product_name, quantity, price, currency, shipping_address, billing_address]
      properties:
        auction_id:
          type: string
          description: Optional auction ID if order is from auction
        product_id:
          type: string
          description: Product ID
        product_name:
          type: string
          description: Product name
        product_image:
          type: string
          description: Product image URL
        quantity:
          type: integer
          minimum: 1
          description: Product quantity
        price:
          type: integer
          minimum: 1
          description: Price in cents
        currency:
          type: string
          length: 3
          description: Currency code (e.g., USD)
        shipping_address:
          $ref: '#/components/schemas/AddressRequest'
        billing_address:
          $ref: '#/components/schemas/AddressRequest'
        notes:
          type: string
          description: Order notes

    AddressRequest:
      type: object
      required: [name, street, city, state, postal_code, country]
      properties:
        name:
          type: string
          description: Full name
        street:
          type: string
          description: Street address
        city:
          type: string
          description: City
        state:
          type: string
          description: State/Province
        postal_code:
          type: string
          description: Postal/ZIP code
        country:
          type: string
          length: 2
          description: Country code (2 letters)
        phone_number:
          type: string
          description: Phone number

    UpdateOrderStatusRequest:
      type: object
      required: [status]
      properties:
        status:
          type: string
          enum: [pending, processing, confirmed, shipped, delivered, cancelled, refunded]
          description: New order status

    OrderResponse:
      type: object
      properties:
        id:
          type: string
          description: Order ID
        user_id:
          type: string
          description: User ID
        auction_id:
          type: string
          description: Auction ID (if applicable)
        product_id:
          type: string
          description: Product ID
        product_name:
          type: string
          description: Product name
        product_image:
          type: string
          description: Product image URL
        quantity:
          type: integer
          description: Product quantity
        price:
          type: integer
          description: Price in cents
        total_amount:
          type: integer
          description: Total amount in cents
        currency:
          type: string
          description: Currency code
        status:
          type: string
          enum: [pending, processing, confirmed, shipped, delivered, cancelled, refunded]
          description: Order status
        payment_status:
          type: string
          enum: [pending, paid, failed, refunded, cancelled]
          description: Payment status
        payment_method:
          type: string
          description: Payment method used
        shipping_address:
          $ref: '#/components/schemas/AddressResponse'
        billing_address:
          $ref: '#/components/schemas/AddressResponse'
        notes:
          type: string
          description: Order notes
        created_at:
          type: string
          format: date-time
          description: Order creation time
        updated_at:
          type: string
          format: date-time
          description: Last update time

    AddressResponse:
      type: object
      properties:
        name:
          type: string
        street:
          type: string
        city:
          type: string
        state:
          type: string
        postal_code:
          type: string
        country:
          type: string
        phone_number:
          type: string

    OrdersListResponse:
      type: object
      properties:
        orders:
          type: array
          items:
            $ref: '#/components/schemas/OrderResponse'
        total:
          type: integer
          description: Total number of orders
        page:
          type: integer
          description: Current page number
        page_size:
          type: integer
          description: Number of orders per page
        total_pages:
          type: integer
          description: Total number of pages

    ErrorResponse:
      type: object
      properties:
        success:
          type: boolean
          example: false
        error:
          type: string
          example: "INVALID_REQUEST"
        message:
          type: string
          example: "The request data was invalid."

  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
