version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: blytz-postgres-prod
    environment:
      POSTGRES_DB: blytz_prod
      POSTGRES_USER: ${POSTGRES_USER:-blytz}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - blytz-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-blytz} -d blytz_prod"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: blytz-redis-prod
    command: redis-server --appendonly yes --maxmemory 256mb --maxmemory-policy allkeys-lru
    volumes:
      - redis_data:/data
    networks:
      - blytz-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Auth Service
  auth-service:
    build:
      context: ./services/auth-service
      dockerfile: Dockerfile
    container_name: blytz-auth-prod
    environment:
      - PORT=8084
      - DATABASE_URL=postgres://${POSTGRES_USER:-blytz}:${POSTGRES_PASSWORD}@postgres:5432/blytz_prod?sslmode=disable
      - JWT_SECRET=${JWT_SECRET}
      - BETTER_AUTH_SECRET=${BETTER_AUTH_SECRET}
      - BETTER_AUTH_URL=https://api.blytz.app
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - blytz-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8084/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Auction Service
  auction-service:
    build:
      context: ./services/auction-service
      dockerfile: Dockerfile
    container_name: blytz-auction-prod
    environment:
      - PORT=8083
      - REDIS_URL=redis://redis:6379
      - DATABASE_URL=postgres://${POSTGRES_USER:-blytz}:${POSTGRES_PASSWORD}@postgres:5432/blytz_prod?sslmode=disable
      - AUTH_SERVICE_URL=http://auth-service:8084
    depends_on:
      redis:
        condition: service_healthy
      postgres:
        condition: service_healthy
      auth-service:
        condition: service_healthy
    networks:
      - blytz-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8083/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Product Service
  product-service:
    build:
      context: ./services/product-service
      dockerfile: Dockerfile
    container_name: blytz-product-prod
    environment:
      - PORT=8082
      - DATABASE_URL=postgres://${POSTGRES_USER:-blytz}:${POSTGRES_PASSWORD}@postgres:5432/blytz_prod?sslmode=disable
      - AUTH_SERVICE_URL=http://auth-service:8084
    depends_on:
      postgres:
        condition: service_healthy
      auth-service:
        condition: service_healthy
    networks:
      - blytz-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8082/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Order Service
  order-service:
    build:
      context: ./services/order-service
      dockerfile: Dockerfile
    container_name: blytz-order-prod
    environment:
      - PORT=8085
      - DATABASE_URL=postgres://${POSTGRES_USER:-blytz}:${POSTGRES_PASSWORD}@postgres:5432/blytz_prod?sslmode=disable
      - AUTH_SERVICE_URL=http://auth-service:8084
    depends_on:
      postgres:
        condition: service_healthy
      auth-service:
        condition: service_healthy
    networks:
      - blytz-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8085/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Payment Service
  payment-service:
    build:
      context: ./services/payment-service
      dockerfile: Dockerfile
    container_name: blytz-payment-prod
    environment:
      - PORT=8086
      - DATABASE_URL=postgres://${POSTGRES_USER:-blytz}:${POSTGRES_PASSWORD}@postgres:5432/blytz_prod?sslmode=disable
      - AUTH_SERVICE_URL=http://auth-service:8084
    depends_on:
      postgres:
        condition: service_healthy
      auth-service:
        condition: service_healthy
    networks:
      - blytz-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8086/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Chat Service
  chat-service:
    build:
      context: ./services/chat-service
      dockerfile: Dockerfile
    container_name: blytz-chat-prod
    environment:
      - PORT=8088
      - REDIS_URL=redis://redis:6379
      - AUTH_SERVICE_URL=http://auth-service:8084
    depends_on:
      redis:
        condition: service_healthy
      auth-service:
        condition: service_healthy
    networks:
      - blytz-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8088/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Logistics Service
  logistics-service:
    build:
      context: ./services/logistics-service
      dockerfile: Dockerfile
    container_name: blytz-logistics-prod
    environment:
      - PORT=8087
      - DATABASE_URL=postgres://${POSTGRES_USER:-blytz}:${POSTGRES_PASSWORD}@postgres:5432/blytz_prod?sslmode=disable
      - AUTH_SERVICE_URL=http://auth-service:8084
    depends_on:
      postgres:
        condition: service_healthy
      auth-service:
        condition: service_healthy
    networks:
      - blytz-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8087/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # API Gateway
  gateway:
    build:
      context: ./services/gateway
      dockerfile: Dockerfile
    container_name: blytz-gateway-prod
    environment:
      - PORT=8080
      - AUCTION_SERVICE_URL=http://auction-service:8083
      - AUTH_SERVICE_URL=http://auth-service:8084
      - PRODUCT_SERVICE_URL=http://product-service:8082
      - ORDER_SERVICE_URL=http://order-service:8085
      - PAYMENT_SERVICE_URL=http://payment-service:8086
      - CHAT_SERVICE_URL=http://chat-service:8088
      - LOGISTICS_SERVICE_URL=http://logistics-service:8087
    depends_on:
      - auction-service
      - auth-service
      - product-service
      - order-service
      - payment-service
      - chat-service
      - logistics-service
    networks:
      - blytz-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      args:
        - NEXT_PUBLIC_API_URL=https://api.blytz.app
        - NEXT_PUBLIC_WS_URL=wss://api.blytz.app
        - MODE=remote
    container_name: blytz-frontend-prod
    environment:
      - NEXT_PUBLIC_API_URL=https://api.blytz.app
      - NEXT_PUBLIC_WS_URL=wss://api.blytz.app
      - MODE=remote
    depends_on:
      - gateway
    networks:
      - blytz-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  postgres_data:
  redis_data:

networks:
  blytz-network:
    driver: bridge