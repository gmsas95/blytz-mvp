# Additional services for demo and seller interfaces
# Add these services to your existing docker-compose.yml

  # Demo Interface - Viewer Platform with LiveKit Client SDK
  demo-frontend:
    build:
      context: ./frontend-demo
      dockerfile: Dockerfile
    container_name: blytz-demo-prod
    env_file:
      - ./.env
    environment:
      - NODE_ENV=production
      - PORT=3001
      - NEXT_PUBLIC_API_URL=https://api.blytz.app
      - NEXT_PUBLIC_WS_URL=wss://api.blytz.app
      - NEXT_PUBLIC_LIVEKIT_URL=wss://livekit.blytz.app
      - CLOUD_LIVEKIT_URL=wss://your-project.livekit.cloud
      - LIVEKIT_API_KEY=${LIVEKIT_API_KEY}
      - LIVEKIT_API_SECRET=${LIVEKIT_API_SECRET}
      - DEMO_MODE=viewer
    depends_on:
      gateway:
        condition: service_healthy
    networks:
      - blytz-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3001"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.demo-frontend.rule=Host(`demo.blytz.app`)"
      - "traefik.http.routers.demo-frontend.entrypoints=websecure"
      - "traefik.http.routers.demo-frontend.tls.certresolver=letsencrypt"
      - "traefik.http.services.demo-frontend.loadbalancer.server.port=3001"

  # Seller Interface - Broadcaster Platform with LiveKit SDK
  seller-frontend:
    build:
      context: ./frontend-seller
      dockerfile: Dockerfile
    container_name: blytz-seller-prod
    env_file:
      - ./.env
    environment:
      - NODE_ENV=production
      - PORT=3002
      - NEXT_PUBLIC_API_URL=https://api.blytz.app
      - NEXT_PUBLIC_WS_URL=wss://api.blytz.app
      - NEXT_PUBLIC_LIVEKIT_URL=wss://livekit.blytz.app
      - CLOUD_LIVEKIT_URL=wss://your-project.livekit.cloud
      - LIVEKIT_API_KEY=${LIVEKIT_API_KEY}
      - LIVEKIT_API_SECRET=${LIVEKIT_API_SECRET}
      - SELLER_MODE=broadcaster
    depends_on:
      gateway:
        condition: service_healthy
    networks:
      - blytz-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3002"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.seller-frontend.rule=Host(`seller.blytz.app`)"
      - "traefik.http.routers.seller-frontend.entrypoints=websecure"
      - "traefik.http.routers.seller-frontend.tls.certresolver=letsencrypt"
      - "traefik.http.services.seller-frontend.loadbalancer.server.port=3002"